# Generated by Django 4.1.6 on 2023-02-20 21:21

import autoslug.fields
import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import tinymce.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Division',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('division_name', models.CharField(max_length=30)),
                ('division_logo', models.URLField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='League',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('league_name', models.CharField(max_length=30)),
                ('slug', autoslug.fields.AutoSlugField(editable=False, populate_from='league_name', unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=100)),
                ('number', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scheduled_time', models.DateTimeField()),
                ('home_score', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('home_pk', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('away_score', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('away_pk', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('status', models.CharField(choices=[('SCH', 'Scheduled'), ('FIN', 'Final'), ('FET', 'Final/Extra Time'), ('FPK', 'Final/Penalty Kicks'), ('CAN', 'Cancelled'), ('RES', 'Rescheduled')], default='SCH', max_length=3)),
                ('playoff', models.BooleanField()),
                ('slug', autoslug.fields.AutoSlugField(editable=False, populate_from='__str__', unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag_name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('team_name', models.CharField(max_length=30)),
                ('team_abbreviation', models.CharField(max_length=3)),
                ('team_logo', models.URLField(blank=True, null=True)),
                ('team_division', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lastever.division')),
                ('team_owner', models.ForeignKey(limit_choices_to={'groups__name__in': ['Team Owner', 'Admin']}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Statistic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('goals', models.PositiveSmallIntegerField()),
                ('yellow_cards', models.PositiveSmallIntegerField()),
                ('red_cards', models.PositiveSmallIntegerField()),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lastever.schedule')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lastever.player')),
            ],
        ),
        migrations.AddField(
            model_name='schedule',
            name='away_team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='lastever.team'),
        ),
        migrations.AddField(
            model_name='schedule',
            name='home_team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='lastever.team'),
        ),
        migrations.AddField(
            model_name='schedule',
            name='league',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lastever.league'),
        ),
        migrations.AddField(
            model_name='schedule',
            name='referee',
            field=models.ForeignKey(limit_choices_to={'groups__name__in': ['Referee', 'Admin']}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='player',
            name='team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lastever.team'),
        ),
        migrations.AddField(
            model_name='division',
            name='division_leage',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lastever.league'),
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('slug', autoslug.fields.AutoSlugField(editable=False, populate_from='title', unique=True)),
                ('posted', models.DateTimeField(default=datetime.datetime.now)),
                ('text', tinymce.models.HTMLField()),
                ('tags', models.ManyToManyField(to='lastever.tag')),
            ],
        ),
    ]
